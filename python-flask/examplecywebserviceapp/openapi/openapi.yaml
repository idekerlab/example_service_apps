openapi: 3.0.1
info:
  description: "This [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification)\
    \ document defines the Cytoscape Service-App \nREST Service API which is used\
    \ by Cytoscape on the Web for Service-Apps.\n\nThis document and all references\
    \ to the Cytoscape Service-App REST API, source code and ancillary documentation\
    \ are copyrighted: *Â© 2013-2024, \nThe Regents of the University of California,\
    \ The Cytoscape Consortium.  All rights reserved.*  Please abide with the \n[Terms\
    \ of Use, Licensing and Sources](https://home.ndexbio.org/disclaimer-license/).\
    \ Likewise, the [Swagger-UI](https://github.com/swagger-api/swagger-ui) \ndocument\
    \ reader that displays this OpenAPI document is copyrighted by *Smartbear Software*.\
    \ Its open-source software license is found \n[here](https://github.com/swagger-api/swagger-ui/blob/master/LICENSE).\n\
    \n"
  title: Cytoscape Service-App REST API
  version: 1.0.0
servers:
- description: Cytoscape Service-App REST API
  url: /example
- description: |
    The host server URL can be overridden.
  url: "{Host}"
  variables:
    Host:
      default: /example
paths:
  /:
    get:
      description: Provides detailed information about algorithm offered by this Service-App
      operationId: get_meta_data
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyMetaData'
          description: Success
        "400":
          description: Task not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyErrorResponse'
          description: Server Error
      summary: Gets meta data about this service/algorithm
      x-openapi-router-controller: examplecywebserviceapp.controllers.default_controller
    post:
      description: "Payload in JSON format needs to have data along with name of algorithm\
        \ to run and any algorithm specific parameters. Information about what algorithms\
        \ are availableand what are the custom parameters can obtained by visiting\
        \ the 'algorithms'endpoint \n\nThe service should upon post return 202 and\
        \ set location to resource to poll for result. Which will\nMatch the URL of\
        \ GET request below."
      operationId: request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CyRequest'
        description: Request as json
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyRequestId'
          description: |
            The task was successfully submitted to the Service-App. Visit the URL specified in Location field in HEADERS to get status and resultsIn addition, the id(s) of the task(s) are returned as json
          headers:
            Location:
              description: URL containing resource generated by this request
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyErrorResponse'
          description: Server Error
      summary: Submits task
      x-openapi-router-controller: examplecywebserviceapp.controllers.default_controller
  /status:
    get:
      description: "Gets version, load, and diskusage of server"
      operationId: status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyServerStatus'
          description: Server Status
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyErrorResponse'
          description: Server Error
      summary: Gets server status
      x-openapi-router-controller: examplecywebserviceapp.controllers.default_controller
  /{id}:
    delete:
      operationId: delete_request
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Delete request successfully received
        "400":
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyErrorResponse'
          description: Server Error
      summary: "Deletes task associated with {id} passed in"
      x-openapi-router-controller: examplecywebserviceapp.controllers.default_controller
    get:
      description: |-
        NOTE: For incomplete/failed jobs only Status, message, progress, and walltime will
        be returned in JSON
      operationId: get_result
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyResult'
          description: Success
        "400":
          description: Task not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyErrorResponse'
          description: Server Error
      summary: Gets result of task
      x-openapi-router-controller: examplecywebserviceapp.controllers.default_controller
  /{id}/status:
    get:
      description: This lets caller get status without getting the full result back
      operationId: get_request_status
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyResultStatus'
          description: Success
        "400":
          description: Task not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyErrorResponse'
          description: Server Error
      summary: Gets status of task
      x-openapi-router-controller: examplecywebserviceapp.controllers.default_controller
components:
  schemas:
    CyErrorResponse:
      example:
        threadId: threadId
        timeStamp: timeStamp
        errorCode: errorCode
        description: description
        stackTrace: stackTrace
        message: message
      properties:
        errorCode:
          description: Error code to help identify issue
          title: errorCode
          type: string
        message:
          description: Human readable description of error
          title: message
          type: string
        description:
          description: More detailed description of error
          title: description
          type: string
        stackTrace:
          description: Stack trace of error
          title: stackTrace
          type: string
        threadId:
          description: Id of thread running process
          title: threadId
          type: string
        timeStamp:
          description: UTC Time stamp in YYYY-MM-DD_HH:MM.S
          title: timeStamp
          type: string
      title: CyErrorResponse
      type: object
    CyMetaData:
      example:
        website: website
        citation: citation
        author: author
        description: description
        version: version
        cyWebMenuItem:
          path:
          - gravity: 10
            name: My App
          - gravity: 10
            name: My App
          root: Apps
        cyWebActions:
        - addNetworks
        - addNetworks
        name: name
        codeRepository: codeRepository
        tutorial: tutorial
        parameters:
        - minValue: 0.8008281904610115
          validationHelp: validationHelp
          displayName: displayName
          defaultValue: defaultValue
          maxValue: 6.027456183070403
          valueList:
          - valueList
          - valueList
          validationType: number
          columnTypeFilter: list
          description: description
          type: text
          validationRegex: validationRegex
        - minValue: 0.8008281904610115
          validationHelp: validationHelp
          displayName: displayName
          defaultValue: defaultValue
          maxValue: 6.027456183070403
          valueList:
          - valueList
          - valueList
          validationType: number
          columnTypeFilter: list
          description: description
          type: text
          validationRegex: validationRegex
        email: email
        serviceInputDefinition:
          inputColumns:
          - allowMultipleSelection: true
            defaultColumnName: defaultColumnName
            dataType: list
            name: name
            description: description
            columnName: columnName
          - allowMultipleSelection: true
            defaultColumnName: defaultColumnName
            dataType: list
            name: name
            description: description
            columnName: columnName
          scope: scope
          inputNetwork:
            format: cx2
            model: network
          type: type
      properties:
        name:
          description: Service-App Name
          title: name
          type: string
        parameters:
          description: Any custom parameters this Service-App accepts
          items:
            $ref: '#/components/schemas/CyMetaDataParameter'
          title: parameters
          type: array
          uniqueItems: true
        version:
          description: Version
          title: version
          type: string
        cyWebActions:
          description: List of action to be performed with result by caller. Elements
            of list can be one of the allowable values
          enum:
          - addNetworks
          - addTables
          - updateLayouts
          - updateNetwork
          - updateSelection
          - updateTables
          items:
            description: List of action to be performed with result by caller. Elements
              of list can be one of the allowable values
            enum:
            - addNetworks
            - addTables
            - updateLayouts
            - updateNetwork
            - updateSelection
            - updateTables
            type: string
          title: cyWebActions
          type: array
        description:
          description: Description of this Service-App
          title: description
          type: string
        author:
          description: Author(s) of this Service-App
          title: author
          type: string
        email:
          description: Email contact for this Service-App
          title: email
          type: string
        website:
          description: Website for this Service-App
          title: website
          type: string
        codeRepository:
          description: URL of code repository for this Service-App
          title: codeRepository
          type: string
        tutorial:
          description: URL of tutorial for this Service-App
          title: tutorial
          type: string
        citation:
          description: Citation for this Service-App
          title: citation
          type: string
        cyWebMenuItem:
          $ref: '#/components/schemas/CyWebMenuItem'
        serviceInputDefinition:
          $ref: '#/components/schemas/CyServiceInputDefinition'
      title: CyMetaData
      type: object
    CyMetaDataParameter:
      description: Parameter that can be passed to Service-App
      example:
        minValue: 0.8008281904610115
        validationHelp: validationHelp
        displayName: displayName
        defaultValue: defaultValue
        maxValue: 6.027456183070403
        valueList:
        - valueList
        - valueList
        validationType: number
        columnTypeFilter: list
        description: description
        type: text
        validationRegex: validationRegex
      properties:
        displayName:
          description: Display name for parameter
          title: displayName
          type: string
        description:
          description: Parameter description
          title: description
          type: string
        type:
          description: Type of parameter
          enum:
          - text
          - dropDown
          - radio
          - checkBox
          - nodeColumn
          - edgeColumn
          - flag
          title: type
          type: string
        valueList:
          description: Values to put into 'dropDown' type field
          items:
            description: Values to put into 'dropDown' type field
            type: string
          title: valueList
          type: array
        defaultValue:
          description: Default value for parameter
          title: defaultValue
          type: string
        validationType:
          description: Type of validation to perform
          enum:
          - number
          - digits
          - string
          title: validationType
          type: string
        validationHelp:
          description: Text to display if validation fails
          title: validationHelp
          type: string
        validationRegex:
          description: Regular expression that is applied to parameters of 'type'
            string
          title: validationRegex
          type: string
        columnTypeFilter:
          description: "Only used for nodes/edges column type. If defined, Cytoscape\
            \ Web uses it to filter what node/edge columns to display. If omitted,\
            \ all columns will be listed"
          enum:
          - list
          - number
          - wholenumber
          - list_of_number
          - list_of_wholenumber
          - string
          - long
          - integer
          - double
          - boolean
          - list_of_string
          - list_of_long
          - list_of_integer
          - list_of_double
          - list_of_boolean
          title: columnTypeFilter
          type: string
        minValue:
          description: "If set and parameter is of type 'number' or 'digits',  values\
            \ below this should NOT be allowed"
          title: minValue
          type: number
        maxValue:
          description: "If set and parameter is of type 'number' or 'digits',  values\
            \ above this should NOT be allowed"
          title: maxValue
          type: number
      title: CyMetaDataParameter
      type: object
    CyWebMenuItem:
      description: Defines menu for service
      example:
        path:
        - gravity: 10
          name: My App
        - gravity: 10
          name: My App
        root: Apps
      properties:
        root:
          description: Top level menu to place this service
          example: Apps
          title: root
          type: string
        path:
          description: Service menu path and name
          items:
            $ref: '#/components/schemas/CyWebMenuItemPath'
          title: path
          type: array
      title: CyWebMenuItem
      type: object
    CyWebMenuItemPath:
      description: Menu or submenu item
      example:
        gravity: 10
        name: My App
      properties:
        name:
          description: Menu name
          example: My App
          title: name
          type: string
        gravity:
          description: "Sets menu gravity, higher values mean lower on menu"
          example: 10
          format: int32
          title: gravity
          type: integer
      title: CyWebMenuItemPath
      type: object
    CyInputColumn:
      description: List of columns that need to be created. For type of 'nodes' and
        'edges' only.
      example:
        allowMultipleSelection: true
        defaultColumnName: defaultColumnName
        dataType: list
        name: name
        description: description
        columnName: columnName
      properties:
        name:
          description: The label text of the dropdown list. It will also be used as
            the column name in the generated data block.
          title: name
          type: string
        description:
          description: A short description of the column. Used as a hint in the UI.
          title: description
          type: string
        columnName:
          description: Name of the column that should be automatically included. No
            UI control will be generated for this column. Treated like a preselected
            value for name attribute.
          title: columnName
          type: string
        dataType:
          description: "Data type of the attribute. When defined, Cytoscape Web uses\
            \ it to filter the dropdown list. If omitted, the dropdown will contain\
            \ all columns."
          enum:
          - list
          - number
          - wholenumber
          - list_of_number
          - list_of_wholenumber
          - string
          - long
          - integer
          - double
          - boolean
          - list_of_string
          - list_of_long
          - list_of_integer
          - list_of_double
          - list_of_boolean
          title: dataType
          type: string
        allowMultipleSelection:
          description: "When set to true, all selected columns in the dropdown will\
            \ be used to serialize the data, otherwise only one column can be selected"
          title: allowMultipleSelection
          type: boolean
        defaultColumnName:
          description: "(Optional) The default selection in the column name dropdown.\
            \ If the column specified in field doesn't exist in node or edge table,\
            \ no selection will be make."
          title: defaultColumnName
          type: string
      title: CyInputColumn
      type: object
    CyInputNetwork:
      description: Defines structure of data requested by Service-App. For type of
        'network' only.
      example:
        format: cx2
        model: network
      properties:
        format:
          description: Denotes format of returned data. 'cx2' returns CX2 format.
          enum:
          - cx2
          - edgelist
          example: cx2
          title: format
          type: string
        model:
          description: Denotes network content returned. 'network' denotes full network
            data and 'graph' denotes bare network (ids only)
          enum:
          - network
          - graph
          example: network
          title: model
          type: string
      title: CyInputNetwork
      type: object
    CyServiceInputDefinition:
      description: Defines data this Service-App expects to receive
      example:
        inputColumns:
        - allowMultipleSelection: true
          defaultColumnName: defaultColumnName
          dataType: list
          name: name
          description: description
          columnName: columnName
        - allowMultipleSelection: true
          defaultColumnName: defaultColumnName
          dataType: list
          name: name
          description: description
          columnName: columnName
        scope: scope
        inputNetwork:
          format: cx2
          model: network
        type: type
      properties:
        type:
          title: type
          type: string
        scope:
          title: scope
          type: string
        inputNetwork:
          $ref: '#/components/schemas/CyInputNetwork'
        inputColumns:
          description: List of columns that need to be created. For type of 'nodes'
            and 'edges' only.
          items:
            $ref: '#/components/schemas/CyInputColumn'
          title: inputColumns
          type: array
      title: CyServiceInputDefinition
      type: object
    CyResultStatus:
      example:
        progress: 0
        wallTime: 6
        startTime: 1
        id: 261fb9b7-75af-4f1a-9caa-e57a4b5fc349
        message: message
        status: submitted
      properties:
        id:
          description: Id of Cytoscape Service-App Request
          example: 261fb9b7-75af-4f1a-9caa-e57a4b5fc349
          title: id
          type: string
        status:
          description: "Status of task can be (submitted,processing,complete,failed)"
          enum:
          - submitted
          - processing
          - complete
          - failed
          example: submitted
          title: status
          type: string
        message:
          description: null or a message denoting a possible issue
          title: message
          type: string
        progress:
          description: int between 0 and 100 denoting progress of task
          format: int32
          title: progress
          type: integer
        wallTime:
          description: Walltime in milliseconds task took to run
          format: int64
          title: wallTime
          type: integer
        startTime:
          description: Time in milliseconds since 1969 epoch when task started
          format: int64
          title: startTime
          type: integer
      title: CyResultStatus
      type: object
    CyResult:
      example:
        result: "{}"
        progress: 0
        wallTime: 6
        startTime: 1
        id: 261fb9b7-75af-4f1a-9caa-e57a4b5fc349
        message: message
        status: submitted
      properties:
        id:
          description: Id of Cytoscape Service-App REST Request
          example: 261fb9b7-75af-4f1a-9caa-e57a4b5fc349
          title: id
          type: string
        status:
          description: "Status of task can be (submitted,processing,complete,failed)"
          example: submitted
          title: status
          type: string
        message:
          description: null or a message denoting a possible issue
          title: message
          type: string
        progress:
          description: int between 0 and 100 denoting progress of task
          format: int32
          title: progress
          type: integer
        wallTime:
          description: Walltime in milliseconds task took to run
          format: int64
          title: wallTime
          type: integer
        startTime:
          description: Time in milliseconds since 1969 epoch when task started
          format: int64
          title: startTime
          type: integer
        result:
          description: data as json fragment
          title: data
          type: object
      title: CyResult
      type: object
    JsonNode:
      description: data as json fragment
      title: data
      type: object
    CyRequestId:
      example:
        id: 261fb9b7-75af-4f1a-9caa-e57a4b5fc349
      properties:
        id:
          description: Id of Cytoscape Service-App REST Request
          example: 261fb9b7-75af-4f1a-9caa-e57a4b5fc349
          title: id
          type: string
      title: CyRequestId
      type: object
    CyRequest:
      example:
        data: "{}"
        parameters:
          key: parameters
        algorithm: updatetablesexample
      properties:
        algorithm:
          description: Name of algorithm to run
          example: updatetablesexample
          title: algorithm
          type: string
        data:
          description: data as json fragment
          title: data
          type: object
        parameters:
          additionalProperties:
            description: "Optional parameters in simple map format arg: value"
            type: string
          description: "Optional parameters in simple map format arg: value"
          title: parameters
          type: object
      title: CyRequest
      type: object
    CyServerStatus:
      example:
        version: version
        status: ok
      properties:
        status:
          description: Status of server
          enum:
          - ok
          - error
          title: status
          type: string
        version:
          description: Gets version of this service
          title: version
          type: string
      title: CyServerStatus
      type: object
