from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from examplecywebserviceapp.serviceappmodel.base_model import Model
from examplecywebserviceapp.serviceappmodel.cy_meta_data_parameter import CyMetaDataParameter
from examplecywebserviceapp.serviceappmodel.cy_service_input_definition import CyServiceInputDefinition
from examplecywebserviceapp.serviceappmodel.cy_web_menu_item import CyWebMenuItem
from examplecywebserviceapp import util

from examplecywebserviceapp.serviceappmodel.cy_meta_data_parameter import CyMetaDataParameter  # noqa: E501
from examplecywebserviceapp.serviceappmodel.cy_service_input_definition import CyServiceInputDefinition  # noqa: E501
from examplecywebserviceapp.serviceappmodel.cy_web_menu_item import CyWebMenuItem  # noqa: E501

class CyMetaData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, parameters=None, version=None, cy_web_actions=None, description=None, author=None, email=None, website=None, code_repository=None, tutorial=None, citation=None, cy_web_menu_item=None, service_input_definition=None):  # noqa: E501
        """CyMetaData - a model defined in OpenAPI

        :param name: The name of this CyMetaData.  # noqa: E501
        :type name: str
        :param parameters: The parameters of this CyMetaData.  # noqa: E501
        :type parameters: list[CyMetaDataParameter]
        :param version: The version of this CyMetaData.  # noqa: E501
        :type version: str
        :param cy_web_actions: The cy_web_actions of this CyMetaData.  # noqa: E501
        :type cy_web_actions: List[str]
        :param description: The description of this CyMetaData.  # noqa: E501
        :type description: str
        :param author: The author of this CyMetaData.  # noqa: E501
        :type author: str
        :param email: The email of this CyMetaData.  # noqa: E501
        :type email: str
        :param website: The website of this CyMetaData.  # noqa: E501
        :type website: str
        :param code_repository: The code_repository of this CyMetaData.  # noqa: E501
        :type code_repository: str
        :param tutorial: The tutorial of this CyMetaData.  # noqa: E501
        :type tutorial: str
        :param citation: The citation of this CyMetaData.  # noqa: E501
        :type citation: str
        :param cy_web_menu_item: The cy_web_menu_item of this CyMetaData.  # noqa: E501
        :type cy_web_menu_item: CyWebMenuItem
        :param service_input_definition: The service_input_definition of this CyMetaData.  # noqa: E501
        :type service_input_definition: CyServiceInputDefinition
        """
        self.openapi_types = {
            'name': str,
            'parameters': list[CyMetaDataParameter],
            'version': str,
            'cy_web_actions': List[str],
            'description': str,
            'author': str,
            'email': str,
            'website': str,
            'code_repository': str,
            'tutorial': str,
            'citation': str,
            'cy_web_menu_item': CyWebMenuItem,
            'service_input_definition': CyServiceInputDefinition
        }

        self.attribute_map = {
            'name': 'name',
            'parameters': 'parameters',
            'version': 'version',
            'cy_web_actions': 'cyWebActions',
            'description': 'description',
            'author': 'author',
            'email': 'email',
            'website': 'website',
            'code_repository': 'codeRepository',
            'tutorial': 'tutorial',
            'citation': 'citation',
            'cy_web_menu_item': 'cyWebMenuItem',
            'service_input_definition': 'serviceInputDefinition'
        }

        self._name = name
        self._parameters = parameters
        self._version = version
        self._cy_web_actions = cy_web_actions
        self._description = description
        self._author = author
        self._email = email
        self._website = website
        self._code_repository = code_repository
        self._tutorial = tutorial
        self._citation = citation
        self._cy_web_menu_item = cy_web_menu_item
        self._service_input_definition = service_input_definition

    @classmethod
    def from_dict(cls, dikt) -> 'CyMetaData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CyMetaData of this CyMetaData.  # noqa: E501
        :rtype: CyMetaData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this CyMetaData.

        Service-App Name  # noqa: E501

        :return: The name of this CyMetaData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CyMetaData.

        Service-App Name  # noqa: E501

        :param name: The name of this CyMetaData.
        :type name: str
        """

        self._name = name

    @property
    def parameters(self) -> list[CyMetaDataParameter]:
        """Gets the parameters of this CyMetaData.

        Any custom parameters this Service-App accepts  # noqa: E501

        :return: The parameters of this CyMetaData.
        :rtype: list[CyMetaDataParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters: list[CyMetaDataParameter]):
        """Sets the parameters of this CyMetaData.

        Any custom parameters this Service-App accepts  # noqa: E501

        :param parameters: The parameters of this CyMetaData.
        :type parameters: list[CyMetaDataParameter]
        """

        self._parameters = parameters

    @property
    def version(self) -> str:
        """Gets the version of this CyMetaData.

        Version  # noqa: E501

        :return: The version of this CyMetaData.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this CyMetaData.

        Version  # noqa: E501

        :param version: The version of this CyMetaData.
        :type version: str
        """

        self._version = version

    @property
    def cy_web_actions(self) -> List[str]:
        """Gets the cy_web_actions of this CyMetaData.

        List of action to be performed with result by caller. Elements of list can be one of the allowable values  # noqa: E501

        :return: The cy_web_actions of this CyMetaData.
        :rtype: List[str]
        """
        return self._cy_web_actions

    @cy_web_actions.setter
    def cy_web_actions(self, cy_web_actions: List[str]):
        """Sets the cy_web_actions of this CyMetaData.

        List of action to be performed with result by caller. Elements of list can be one of the allowable values  # noqa: E501

        :param cy_web_actions: The cy_web_actions of this CyMetaData.
        :type cy_web_actions: List[str]
        """
        allowed_values = ["addNetworks", "addTables", "updateLayouts", "updateNetwork", "updateSelection", "updateTables"]  # noqa: E501
        if not set(cy_web_actions).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `cy_web_actions` [{0}], must be a subset of [{1}]"  # noqa: E501
                .format(", ".join(map(str, set(cy_web_actions) - set(allowed_values))),  # noqa: E501
                        ", ".join(map(str, allowed_values)))
            )

        self._cy_web_actions = cy_web_actions

    @property
    def description(self) -> str:
        """Gets the description of this CyMetaData.

        Description of this Service-App  # noqa: E501

        :return: The description of this CyMetaData.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this CyMetaData.

        Description of this Service-App  # noqa: E501

        :param description: The description of this CyMetaData.
        :type description: str
        """

        self._description = description

    @property
    def author(self) -> str:
        """Gets the author of this CyMetaData.

        Author(s) of this Service-App  # noqa: E501

        :return: The author of this CyMetaData.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this CyMetaData.

        Author(s) of this Service-App  # noqa: E501

        :param author: The author of this CyMetaData.
        :type author: str
        """

        self._author = author

    @property
    def email(self) -> str:
        """Gets the email of this CyMetaData.

        Email contact for this Service-App  # noqa: E501

        :return: The email of this CyMetaData.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this CyMetaData.

        Email contact for this Service-App  # noqa: E501

        :param email: The email of this CyMetaData.
        :type email: str
        """

        self._email = email

    @property
    def website(self) -> str:
        """Gets the website of this CyMetaData.

        Website for this Service-App  # noqa: E501

        :return: The website of this CyMetaData.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website: str):
        """Sets the website of this CyMetaData.

        Website for this Service-App  # noqa: E501

        :param website: The website of this CyMetaData.
        :type website: str
        """

        self._website = website

    @property
    def code_repository(self) -> str:
        """Gets the code_repository of this CyMetaData.

        URL of code repository for this Service-App  # noqa: E501

        :return: The code_repository of this CyMetaData.
        :rtype: str
        """
        return self._code_repository

    @code_repository.setter
    def code_repository(self, code_repository: str):
        """Sets the code_repository of this CyMetaData.

        URL of code repository for this Service-App  # noqa: E501

        :param code_repository: The code_repository of this CyMetaData.
        :type code_repository: str
        """

        self._code_repository = code_repository

    @property
    def tutorial(self) -> str:
        """Gets the tutorial of this CyMetaData.

        URL of tutorial for this Service-App  # noqa: E501

        :return: The tutorial of this CyMetaData.
        :rtype: str
        """
        return self._tutorial

    @tutorial.setter
    def tutorial(self, tutorial: str):
        """Sets the tutorial of this CyMetaData.

        URL of tutorial for this Service-App  # noqa: E501

        :param tutorial: The tutorial of this CyMetaData.
        :type tutorial: str
        """

        self._tutorial = tutorial

    @property
    def citation(self) -> str:
        """Gets the citation of this CyMetaData.

        Citation for this Service-App  # noqa: E501

        :return: The citation of this CyMetaData.
        :rtype: str
        """
        return self._citation

    @citation.setter
    def citation(self, citation: str):
        """Sets the citation of this CyMetaData.

        Citation for this Service-App  # noqa: E501

        :param citation: The citation of this CyMetaData.
        :type citation: str
        """

        self._citation = citation

    @property
    def cy_web_menu_item(self) -> CyWebMenuItem:
        """Gets the cy_web_menu_item of this CyMetaData.


        :return: The cy_web_menu_item of this CyMetaData.
        :rtype: CyWebMenuItem
        """
        return self._cy_web_menu_item

    @cy_web_menu_item.setter
    def cy_web_menu_item(self, cy_web_menu_item: CyWebMenuItem):
        """Sets the cy_web_menu_item of this CyMetaData.


        :param cy_web_menu_item: The cy_web_menu_item of this CyMetaData.
        :type cy_web_menu_item: CyWebMenuItem
        """

        self._cy_web_menu_item = cy_web_menu_item

    @property
    def service_input_definition(self) -> CyServiceInputDefinition:
        """Gets the service_input_definition of this CyMetaData.


        :return: The service_input_definition of this CyMetaData.
        :rtype: CyServiceInputDefinition
        """
        return self._service_input_definition

    @service_input_definition.setter
    def service_input_definition(self, service_input_definition: CyServiceInputDefinition):
        """Sets the service_input_definition of this CyMetaData.


        :param service_input_definition: The service_input_definition of this CyMetaData.
        :type service_input_definition: CyServiceInputDefinition
        """

        self._service_input_definition = service_input_definition
