from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from examplecywebserviceapp.serviceappmodel.base_model import Model
from examplecywebserviceapp.serviceappmodel.cy_input_column import CyInputColumn
from examplecywebserviceapp.serviceappmodel.cy_input_network import CyInputNetwork
from examplecywebserviceapp import util

from examplecywebserviceapp.serviceappmodel.cy_input_column import CyInputColumn  # noqa: E501
from examplecywebserviceapp.serviceappmodel.cy_input_network import CyInputNetwork  # noqa: E501

class CyServiceInputDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, scope=None, input_network=None, input_columns=None):  # noqa: E501
        """CyServiceInputDefinition - a model defined in OpenAPI

        :param type: The type of this CyServiceInputDefinition.  # noqa: E501
        :type type: str
        :param scope: The scope of this CyServiceInputDefinition.  # noqa: E501
        :type scope: str
        :param input_network: The input_network of this CyServiceInputDefinition.  # noqa: E501
        :type input_network: CyInputNetwork
        :param input_columns: The input_columns of this CyServiceInputDefinition.  # noqa: E501
        :type input_columns: List[CyInputColumn]
        """
        self.openapi_types = {
            'type': str,
            'scope': str,
            'input_network': CyInputNetwork,
            'input_columns': List[CyInputColumn]
        }

        self.attribute_map = {
            'type': 'type',
            'scope': 'scope',
            'input_network': 'inputNetwork',
            'input_columns': 'inputColumns'
        }

        self._type = type
        self._scope = scope
        self._input_network = input_network
        self._input_columns = input_columns

    @classmethod
    def from_dict(cls, dikt) -> 'CyServiceInputDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CyServiceInputDefinition of this CyServiceInputDefinition.  # noqa: E501
        :rtype: CyServiceInputDefinition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this CyServiceInputDefinition.


        :return: The type of this CyServiceInputDefinition.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this CyServiceInputDefinition.


        :param type: The type of this CyServiceInputDefinition.
        :type type: str
        """

        self._type = type

    @property
    def scope(self) -> str:
        """Gets the scope of this CyServiceInputDefinition.


        :return: The scope of this CyServiceInputDefinition.
        :rtype: str
        """
        return self._scope

    @scope.setter
    def scope(self, scope: str):
        """Sets the scope of this CyServiceInputDefinition.


        :param scope: The scope of this CyServiceInputDefinition.
        :type scope: str
        """

        self._scope = scope

    @property
    def input_network(self) -> CyInputNetwork:
        """Gets the input_network of this CyServiceInputDefinition.


        :return: The input_network of this CyServiceInputDefinition.
        :rtype: CyInputNetwork
        """
        return self._input_network

    @input_network.setter
    def input_network(self, input_network: CyInputNetwork):
        """Sets the input_network of this CyServiceInputDefinition.


        :param input_network: The input_network of this CyServiceInputDefinition.
        :type input_network: CyInputNetwork
        """

        self._input_network = input_network

    @property
    def input_columns(self) -> List[CyInputColumn]:
        """Gets the input_columns of this CyServiceInputDefinition.

        List of columns that need to be created. For type of 'nodes' and 'edges' only.  # noqa: E501

        :return: The input_columns of this CyServiceInputDefinition.
        :rtype: List[CyInputColumn]
        """
        return self._input_columns

    @input_columns.setter
    def input_columns(self, input_columns: List[CyInputColumn]):
        """Sets the input_columns of this CyServiceInputDefinition.

        List of columns that need to be created. For type of 'nodes' and 'edges' only.  # noqa: E501

        :param input_columns: The input_columns of this CyServiceInputDefinition.
        :type input_columns: List[CyInputColumn]
        """

        self._input_columns = input_columns
